package com.decomputed;

import org.junit.Test;

import static java.lang.Math.sqrt;
import static java.util.stream.LongStream.rangeClosed;
import static org.junit.Assert.assertEquals;

/**
 * Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
 * <p>
 * 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
 * <p>
 * By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
 *
 * @author Luis (luis@decomputed.com)
 * @since November 20, 2014 - 22h35
 */
public class Problem0002Test {


    @Test
    public void testSupplier() {

        assertEquals(
                rangeClosed(1, 4000000)
                        .filter(n -> n % 2 == 0)
                        .filter(Fibonacci::isFibonacciNumber)
                        .sum(),
                4613732);
    }
}
